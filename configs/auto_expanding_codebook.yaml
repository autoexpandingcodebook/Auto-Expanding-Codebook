seed: 42
dataset: imagenet-1k
train_batch_size: 8

accelerate:
  mixed_precision: bf16

ema:
  beta: 0.999
  
model:
  name: flexTokenizer
  embedding_dim: 8
  hidden_channels: 128
  channel_multipliers: [1, 2, 2, 4]
  encoder_layer_configs: [2, 2, 2, 2, 2]
  decoder_layer_configs: [2, 2, 2, 2, 2]
  use_adaptive_norm: true
  use_learnable_up_down_sample: true
  quantizer_config:
    quantize_type: vq
    embed_dim: 8
    num_embed: 262144
    commitment_loss_weight: 0.25
    use_l2_norm: False
    use_uniform_init: True

discriminator:
  name: dino_discriminator
  lambda_perceptual_loss: 1.0
  disable_adaptive_weight: true
  gen_loss_type: non_saturate
  disc_loss_type: hinge
  lambda_adversarial_loss : 0.1
  lambda_disc_loss: 1.0

  
logger:
  dataset_name: ${dataset} # this is used to apply the correct normalization to the images
  checkpoint_every_step: 5000
  wandb:
    project: any_tokenizer_official
    mode: offline

  image_logger:
    img_log_iter_frequency: 1
    max_images_to_log: 8
    save_on_local: true
    save_on_wandb: true
    rescale_mean: [0.5, 0.5, 0.5]
    rescale_std: [0.5, 0.5, 0.5]
  
train:
  num_train_steps : 1000000
  grad_accum_every: 1
  apply_gradient_penalty_every: 0
  max_grad_norm: 2
  discr_start_after_step: 0
  train_batch_size: ${train_batch_size}
  use_auto_expanding: True
  start_expanding_step: 0
  expanding_every_step: 100
  expanding_num: 500
  use_reset_history_index_count: True

evaluation:
  eval_every_step: 5000
  eval_for_steps: 200
  dataset_name: ${dataset}
  metrics:
    - mse
    - fid
    - is
    # - sfid
    # - fdd
    - lpips
    - psnr
    - ssim

optim:
  base_lr: 2e-4
  lr_scale: fixed
  wd: 0.05
  betas: [0.9, 0.99]
  eps: 1e-8
  
disc_optim:
  base_lr: 2e-4
  lr_scale: fixed
  wd: 0.05
  betas: [0.9, 0.99]
  eps: 1e-8

lr_scheduler:
  name: constant

disc_lr_scheduler:
  name: constant

train_data:
  dataset:
    path: ${ILSVRC___imagenet-1k}
    split: train
  transforms:
    # before normlization, the images should be in range of [0, 1]
    no_aug: True # Do not use any Timm's augmentations for INET training
    is_training: True
    input_size: 128
    mean: [0.5, 0.5, 0.5]
    std: [0.5, 0.5, 0.5]
  dataloader:
    persistent_workers: true
    batch_size: ${train_batch_size}
    num_workers: 20
    shuffle: True

eval_data: 
  dataset:
    path: ${ILSVRC___imagenet-1k}
    split: validation
  transforms:
    no_aug: True # Do not use any Timm's augmentations for INET training
    is_training: False
    input_size: 128
    mean: [0.5, 0.5, 0.5]
    std: [0.5, 0.5, 0.5]
  dataloader:
    persistent_workers: true
    batch_size: ${train_batch_size} 
    num_workers: 20
    shuffle: True